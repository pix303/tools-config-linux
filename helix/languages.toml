##############################
## Configuration for lsp-ai ##
##############################
[language-server.lsp-ai]
command = "lsp-ai"
timeout = 60
# environment = { "LSP_AI_LOG" = "info" }

[language-server.lsp-ai.config.memory]
file_store = { }

# [language-server.lsp-ai.config.models.model1]
# type = "ollama"
# model = "deepseek-coder"

[language-server.lsp-ai.config.models.model1]
type = "mistral_fim"
fim_endpoint = "https://api.mistral.ai/v1/fim/completions"
model = "codestral-latest"
auth_token_env_var_name = "MISTRAL_API_KEY"

[language-server.lsp-ai.config.completion]
model = "model1"

[language-server.lsp-ai.config.completion.parameters]
max_tokens = 64
max_context = 1024
temperature = 0.2
system = "You are a code assistant chatbot specialized in Go. The user will ask you for assistance coding and you will do your best to answer succinctly and accurately"

[language-server.lsp-ai.config.completion.parameters.fim]
start = "<fim_prefix>"
middle = "<fim_suffix>"
end = "<fim_middle>"

# ## Configure the messages per your needs
# [[language-server.lsp-ai.config.completion.parameters.messages]]
# role = "system"
# content = "Instructions:\n- You are an AI programming assistant specialized in Golang, Rust, Zig, Typescript, Javascript.\n- Given a piece of code with the cursor location marked by \"<CURSOR>\", replace \"<CURSOR>\" with the correct code or comment.\n- First, think step-by-step.\n- Describe your plan for what to build in pseudocode, written out in great detail.\n- Then output the code replacing the \"<CURSOR>\"\n- Ensure that your completion fits within the language context of the provided code snippet (e.g., Python, JavaScript, Rust).\n\nRules:\n- Only respond with code or comments.\n- Only replace \"<CURSOR>\"; do not include any previously written code.\n- Never include \"<CURSOR>\" in your response\n- If the cursor is within a comment, complete the comment meaningfully.\n- Handle ambiguous cases by providing the most contextually appropriate completion.\n- Be consistent with your responses."

# [[language-server.lsp-ai.config.completion.parameters.messages]]
# role = "user"
# content = "func greet(name){\n    fmt.Println(\"Hello, {<CURSOR>}\")\n}"

# [[language-server.lsp-ai.config.completion.parameters.messages]]
# role = "assistant"
# content = "name"

# [[language-server.lsp-ai.config.completion.parameters.messages]]
# role = "user"
# content = "func sum(a, b int) {\n    return a + <CURSOR>\n}"

# [[language-server.lsp-ai.config.completion.parameters.messages]]
# role = "assistant"
# content = "b"

# [[language-server.lsp-ai.config.completion.parameters.messages]]
# role = "user"
# content = "fn multiply(a: i32, b: i32) -> i32 {\n    a * <CURSOR>\n}"

# [[language-server.lsp-ai.config.completion.parameters.messages]]
# role = "assistant"
# content = "b"

# [[language-server.lsp-ai.config.completion.parameters.messages]]
# role = "user"
# content = "# <CURSOR>\nfunc add(a, b int) int{\n    return a + b\n}"

# [[language-server.lsp-ai.config.completion.parameters.messages]]
# role = "assistant"
# content = "Adds two numbers"

# [[language-server.lsp-ai.config.completion.parameters.messages]]
# role = "user"
# content = "# This function checks if a number is even\n<CURSOR>"

# [[language-server.lsp-ai.config.completion.parameters.messages]]
# role = "assistant"
# content = "func isEven(n int) bool {\n    return n % 2 == 0\n}"

# [[language-server.lsp-ai.config.completion.parameters.messages]]
# role = "user"
# content = "{CODE}"



# [[language-server.lsp-ai.config.chat]]
# trigger = "!C"
# action_display_name = "Chat"
# model = "model1"
# parameters = { max_context = 4096, max_tokens = 1024, messages = [{role = "system", content = "You are a code assistant chatbot. The user will ask you for assistance coding and you will do you best to answer succinctly and accurately"}]}




###################################
## Configuration for lsp-angular ##
###################################

[language-server.angular]
command = "ngserver"
args = [
  "--stdio",
  "--tsProbeLocations",
  "/home/paoloc/.local/share/mise/installs/npm-typescript/latest/lib",
  "--ngProbeLocations",
  "/home/paoloc/.local/share/mise/installs/npm-angular-language-server/latest/bin"
  ]

[language-server.sql-lsp]
command = "sql-language-server"
args = ["up", "--method stdio"]

[language-server.vscode-css-language-server]
command = "css-languageserver"
args = ["--stdio"]
config = { provideFormatter = true, css = { validate = { enable = true } } }

[language-server.vscode-html-language-server]
command = "html-languageserver"
args = ["--stdio"]
config = { provideFormatter = true, css = { validate = { enable = true } } }

[language-server.vscode-json-language-server]
command = "vscode-json-languageserver"
args = ["--stdio"]
config = { provideFormatter = true, css = { validate = { enable = true } } }


[[language]]
name = "html"
# language-servers = [ "angular", "html-languageserver" ]
language-servers = [  "html-languageserver" ]
auto-format = true

[[language]]
name = "typescript"
# language-servers = [ "angular", "typescript-language-server" ]
language-servers = [  "typescript-language-server" ]
auto-format = true

[[language]]
name = "tsx"
auto-format = true

[[language]]
name = "sql"
language-servers = [ "sql-lsp" ]

[[language]]
name = "go"
# language-servers = [ "gopls" ]
language-servers = [ "gopls", "lsp-ai" ]
# language-servers = [ "gopls", "golangci-lint-lsp", "lsp-ai" ]
